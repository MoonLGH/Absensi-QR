{"mappings":"AAAA,SAASA,aACL,MAAMC,EAAa,IAAIC,aAAaC,oBACrBC,SAASC,eAAe,eACvCJ,EAAWK,uBAAuBF,SAASC,eAAe,aACrDE,MAAKC,IACFC,QAAQC,IAAIF,EAAOG,MACnB,IAAIC,EAAQC,KAAKC,MAAMN,EAAOG,MAC9B,IAAIC,EAAMG,OAASH,EAAMI,QAAUJ,EAAMK,GACrC,OAAOC,MAAM,iBAEjBd,SAASe,iBAAiB,qBAAqBC,SAAQC,GAAKA,EAAEC,WAC9DC,MAAMX,EAAMG,KAAKH,EAAMI,MAAMJ,EAAMK,GAAE,IACtCO,OAAMC,IACLhB,QAAQgB,MAAMA,GACdP,MAAM,6BAElB,CAEA,SAASQ,oBACL,MAAMC,EAAavB,SAASwB,cAAc,SAC1CD,EAAWE,KAAO,OAClBF,EAAWG,OAAS,UACpBH,EAAWI,iBAAiB,UAAUC,IAClC,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChC,GAAIF,EAAM,CACN,MAAMG,EAAS,IAAIC,WACnBD,EAAOL,iBAAiB,QAAQ,KAC5B,MAAMO,EAAQlC,SAASC,eAAe,YACtCiC,EAAMC,IAAMH,EAAO5B,OACnB8B,EAAME,UAAUC,IAAI,UACpBzC,YAAA,IAEJoC,EAAOM,cAAcT,EACzB,KAYJU,kBAAkB,sBAVF,CACZ,CACIC,MAAO,eACPC,QAAS,IAAM3B,MAAM,0BAEzB,CACI0B,MAAO,sBACPC,QAAS,IAAMlB,EAAWmB,UAItC,CAIA,SAASH,kBAAkBI,EAAOC,GAC9B,MAAMC,EAAS7C,SAASwB,cAAc,OACtCqB,EAAOT,UAAUC,IAAI,UACrB,MAAMS,EAAS9C,SAASwB,cAAc,MACtCsB,EAAOC,UAAYJ,EACnBE,EAAOG,YAAYF,GACnB,MAAMG,EAAkBjD,SAASwB,cAAc,OAC/CyB,EAAgBb,UAAUC,IAAI,oBAC9BO,EAAQ5B,SAAQkC,IACZ,MAAMC,EAASnD,SAASwB,cAAc,UACtC2B,EAAOJ,UAAYG,EAAWV,MAC9BW,EAAOf,UAAUC,IAAI,MAAM,cAAc,QACzCc,EAAOxB,iBAAiB,QAASuB,EAAWT,SAC5CQ,EAAgBD,YAAYG,EAAA,IAEhCN,EAAOG,YAAYC,GACnBjD,SAASoD,cAAc,WAAWJ,YAAYH,EAClD","sources":["src/assets/js/qrImplement.js"],"sourcesContent":["function scanQRCode() {\n    const codeReader = new ZXingBrowser.BrowserQRCodeReader();\n    const button = document.getElementById(\"scan-button\");\n    codeReader.decodeFromImageElement(document.getElementById(\"qr-image\"))\n        .then(result => {\n            console.log(result.text)\n            let hasil = JSON.parse(result.text)\n            if(!hasil.nama && !hasil.kelas && !hasil.id){\n                return alert(\"QR Code Salah\")\n            }\n            document.querySelectorAll(\"#qr-btn .btn.scan\").forEach(e => e.remove())\n            absen(hasil.nama,hasil.kelas,hasil.id)\n        }).catch(error => {\n            console.error(error);\n            alert(\"Failed to scan QR code.\");\n        });\n}\n\nfunction chooseImageSource() {\n    const imageInput = document.createElement(\"input\");\n    imageInput.type = \"file\";\n    imageInput.accept = \"image/*\";\n    imageInput.addEventListener(\"change\", event => {\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n                const image = document.getElementById(\"qr-image\");\n                image.src = reader.result;\n                image.classList.add(\"hidden\")\n                scanQRCode();\n            });\n            reader.readAsDataURL(file);\n        }\n    });\n    const buttons = [\n        {\n            label: \"Take Picture\",\n            handler: () => alert(\"Camera not supported.\")\n        },\n        {\n            label: \"Choose from Gallery\",\n            handler: () => imageInput.click()\n        }\n    ];\n    showOptionsDialog(\"Choose Image Source\", buttons);\n}\n\n\n\nfunction showOptionsDialog(title, buttons) {\n    const dialog = document.createElement(\"div\");\n    dialog.classList.add(\"dialog\");\n    const header = document.createElement(\"h1\");\n    header.innerText = title;\n    dialog.appendChild(header);\n    const buttonContainer = document.createElement(\"div\");\n    buttonContainer.classList.add(\"button-container\");\n    buttons.forEach(buttonInfo => {\n        const button = document.createElement(\"button\");\n        button.innerText = buttonInfo.label;\n        button.classList.add(\"btn\",\"btn-primary\",\"scan\")\n        button.addEventListener(\"click\", buttonInfo.handler);\n        buttonContainer.appendChild(button);\n    });\n    dialog.appendChild(buttonContainer);\n    document.querySelector(\"#qr-btn\").appendChild(dialog);\n}"],"names":["scanQRCode","codeReader","ZXingBrowser","BrowserQRCodeReader","document","getElementById","decodeFromImageElement","then","result","console","log","text","hasil","JSON","parse","nama","kelas","id","alert","querySelectorAll","forEach","e","remove","absen","catch","error","chooseImageSource","imageInput","createElement","type","accept","addEventListener","event","file","target","files","reader","FileReader","image","src","classList","add","readAsDataURL","showOptionsDialog","label","handler","click","title","buttons","dialog","header","innerText","appendChild","buttonContainer","buttonInfo","button","querySelector"],"version":3,"file":"index.6126bdad.js.map"}